<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>bmc-toolbox</title>
    <link>https://bmc-toolbox.github.io/</link>
    <description>Recent content on bmc-toolbox</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 08 Sep 2019 11:10:00 +0300</lastBuildDate>
    
	<atom:link href="https://bmc-toolbox.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>About</title>
      <link>https://bmc-toolbox.github.io/post/first/</link>
      <pubDate>Sun, 08 Sep 2019 11:10:00 +0300</pubDate>
      
      <guid>https://bmc-toolbox.github.io/post/first/</guid>
      <description>BMCs are a fundamental component of datacenter bare metal assets like servers and chassis,
The bmc-toolbox leverages the Baseboard Management Controller to help manage the lifecycle of datacenter bare metal assets
It provides tools to inventorize, configure, manage, authenticate/authorize a large fleet of bare metal assets through the BMC.
 bmclib - A Go lang library that provides a consistent set of methods to interface with BMCs. dora - tool to inventorize a fleet of bare metal servers and chassis assets.</description>
    </item>
    
    <item>
      <title>bmclib</title>
      <link>https://bmc-toolbox.github.io/post/bmclib/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bmc-toolbox.github.io/post/bmclib/</guid>
      <description>A vendor agnostic Baseboard Management Controller library that exposes methods to perform inventory, management, configuration actions.
Devices supported  Dell M1000e Dell iDRAC8 (M630) Dell iDRAC9 (M640) Dell c7000
 HPE iLO4 (Gen8, Gen8) HPE iLO5 (Gen10) Supermicro X10 Supermicro X11 Device not listed? get in touch, we&amp;rsquo;d be happy to help add support :)  Devices Work In Progress  Intel S2600WF0 Quanta QuantaGrid D52BM-2U Work is underway to add Redfish support using the Gofish library  Check it out on Github</description>
    </item>
    
    <item>
      <title>Dora</title>
      <link>https://bmc-toolbox.github.io/post/dora/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bmc-toolbox.github.io/post/dora/</guid>
      <description> Dora the bare metal asset discovery service periodically scans network subnets for server/chassis assets,
and collects data from discovered assets, these are then listed in its DB and kept updated.
Dora acts as a dynamic inventory for bare metal assets, the data is exposed via a JSON API interface.
Check it out on Github   
The figure describes the type of data Dora collects   </description>
    </item>
    
    <item>
      <title>bmcbutler</title>
      <link>https://bmc-toolbox.github.io/post/bmcbutler/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bmc-toolbox.github.io/post/bmcbutler/</guid>
      <description> Bmcbutler is a BMC configuration management tool, its also capable of managing certificates for BMCs.
Check it out on Github  
  
The figure describes bmcbutler handling configuration management for BMCs.   </description>
    </item>
    
    <item>
      <title>Actor</title>
      <link>https://bmc-toolbox.github.io/post/actor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bmc-toolbox.github.io/post/actor/</guid>
      <description> Actor abstracts away various management actions to BMCs (Baseboard Management Controllers), and exposes them through a consistent API.
Check it out on Github    
The figure describes how actor helps trigger actions on BMCs   </description>
    </item>
    
    <item>
      <title>Redfish</title>
      <link>https://bmc-toolbox.github.io/post/redfish/</link>
      <pubDate>Sun, 08 Sep 2019 11:10:00 +0300</pubDate>
      
      <guid>https://bmc-toolbox.github.io/post/redfish/</guid>
      <description>What about Redfish? Redfish is a standard defined by the DMTF, hardware vendors are then expected to implement these standards,
on thier BMCs, however the problems we faced when dealing with a large fleet were,
 Vendors are quite slow at implementing and keeping up with the released standards Some of the implementations are just incorrect or not functional (we try to report these when we find them)
 Not all of the methods exposed by bmclib are currently exposed through Redfish.</description>
    </item>
    
  </channel>
</rss>